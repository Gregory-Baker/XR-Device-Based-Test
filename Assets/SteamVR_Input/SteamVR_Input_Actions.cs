//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Valve.VR
{
    using System;
    using UnityEngine;
    
    
    public partial class SteamVR_Actions
    {
        
        private static SteamVR_Action_Boolean p_base_movement_InteractUI;
        
        private static SteamVR_Action_Boolean p_base_movement_Teleport;
        
        private static SteamVR_Action_Boolean p_base_movement_GrabPinch;
        
        private static SteamVR_Action_Boolean p_base_movement_GrabGrip;
        
        private static SteamVR_Action_Pose p_base_movement_Pose;
        
        private static SteamVR_Action_Skeleton p_base_movement_SkeletonLeftHand;
        
        private static SteamVR_Action_Skeleton p_base_movement_SkeletonRightHand;
        
        private static SteamVR_Action_Single p_base_movement_Squeeze;
        
        private static SteamVR_Action_Boolean p_base_movement_HeadsetOnHead;
        
        private static SteamVR_Action_Boolean p_base_movement_SnapTurnLeft;
        
        private static SteamVR_Action_Boolean p_base_movement_SnapTurnRight;
        
        private static SteamVR_Action_Vector2 p_base_movement_ThumbXY;
        
        private static SteamVR_Action_Boolean p_base_movement_changeActionSet;
        
        private static SteamVR_Action_Vibration p_base_movement_Haptic;
        
        private static SteamVR_Action_Vector2 p_arm_movement_armZRotation;
        
        private static SteamVR_Action_Boolean p_arm_movement_armUp;
        
        private static SteamVR_Action_Boolean p_arm_movement_armDown;
        
        private static SteamVR_Action_Boolean p_arm_movement_changeActionSet;
        
        private static SteamVR_Action_Vector2 p_arm_movement_armXY;
        
        private static SteamVR_Action_Boolean p_arm_movement_armXYEnable;
        
        private static SteamVR_Action_Pose p_arm_movement_pose;
        
        private static SteamVR_Action_Vector2 p_arm_movement_scroll;
        
        private static SteamVR_Action_Pose p_common_controls_Pose;
        
        private static SteamVR_Action_Boolean p_common_controls_ChangeActionSet;
        
        public static SteamVR_Action_Boolean base_movement_InteractUI
        {
            get
            {
                return SteamVR_Actions.p_base_movement_InteractUI.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean base_movement_Teleport
        {
            get
            {
                return SteamVR_Actions.p_base_movement_Teleport.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean base_movement_GrabPinch
        {
            get
            {
                return SteamVR_Actions.p_base_movement_GrabPinch.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean base_movement_GrabGrip
        {
            get
            {
                return SteamVR_Actions.p_base_movement_GrabGrip.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Pose base_movement_Pose
        {
            get
            {
                return SteamVR_Actions.p_base_movement_Pose.GetCopy<SteamVR_Action_Pose>();
            }
        }
        
        public static SteamVR_Action_Skeleton base_movement_SkeletonLeftHand
        {
            get
            {
                return SteamVR_Actions.p_base_movement_SkeletonLeftHand.GetCopy<SteamVR_Action_Skeleton>();
            }
        }
        
        public static SteamVR_Action_Skeleton base_movement_SkeletonRightHand
        {
            get
            {
                return SteamVR_Actions.p_base_movement_SkeletonRightHand.GetCopy<SteamVR_Action_Skeleton>();
            }
        }
        
        public static SteamVR_Action_Single base_movement_Squeeze
        {
            get
            {
                return SteamVR_Actions.p_base_movement_Squeeze.GetCopy<SteamVR_Action_Single>();
            }
        }
        
        public static SteamVR_Action_Boolean base_movement_HeadsetOnHead
        {
            get
            {
                return SteamVR_Actions.p_base_movement_HeadsetOnHead.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean base_movement_SnapTurnLeft
        {
            get
            {
                return SteamVR_Actions.p_base_movement_SnapTurnLeft.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean base_movement_SnapTurnRight
        {
            get
            {
                return SteamVR_Actions.p_base_movement_SnapTurnRight.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Vector2 base_movement_ThumbXY
        {
            get
            {
                return SteamVR_Actions.p_base_movement_ThumbXY.GetCopy<SteamVR_Action_Vector2>();
            }
        }
        
        public static SteamVR_Action_Boolean base_movement_changeActionSet
        {
            get
            {
                return SteamVR_Actions.p_base_movement_changeActionSet.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Vibration base_movement_Haptic
        {
            get
            {
                return SteamVR_Actions.p_base_movement_Haptic.GetCopy<SteamVR_Action_Vibration>();
            }
        }
        
        public static SteamVR_Action_Vector2 arm_movement_armZRotation
        {
            get
            {
                return SteamVR_Actions.p_arm_movement_armZRotation.GetCopy<SteamVR_Action_Vector2>();
            }
        }
        
        public static SteamVR_Action_Boolean arm_movement_armUp
        {
            get
            {
                return SteamVR_Actions.p_arm_movement_armUp.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean arm_movement_armDown
        {
            get
            {
                return SteamVR_Actions.p_arm_movement_armDown.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean arm_movement_changeActionSet
        {
            get
            {
                return SteamVR_Actions.p_arm_movement_changeActionSet.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Vector2 arm_movement_armXY
        {
            get
            {
                return SteamVR_Actions.p_arm_movement_armXY.GetCopy<SteamVR_Action_Vector2>();
            }
        }
        
        public static SteamVR_Action_Boolean arm_movement_armXYEnable
        {
            get
            {
                return SteamVR_Actions.p_arm_movement_armXYEnable.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Pose arm_movement_pose
        {
            get
            {
                return SteamVR_Actions.p_arm_movement_pose.GetCopy<SteamVR_Action_Pose>();
            }
        }
        
        public static SteamVR_Action_Vector2 arm_movement_scroll
        {
            get
            {
                return SteamVR_Actions.p_arm_movement_scroll.GetCopy<SteamVR_Action_Vector2>();
            }
        }
        
        public static SteamVR_Action_Pose common_controls_Pose
        {
            get
            {
                return SteamVR_Actions.p_common_controls_Pose.GetCopy<SteamVR_Action_Pose>();
            }
        }
        
        public static SteamVR_Action_Boolean common_controls_ChangeActionSet
        {
            get
            {
                return SteamVR_Actions.p_common_controls_ChangeActionSet.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        private static void InitializeActionArrays()
        {
            Valve.VR.SteamVR_Input.actions = new Valve.VR.SteamVR_Action[] {
                    SteamVR_Actions.base_movement_InteractUI,
                    SteamVR_Actions.base_movement_Teleport,
                    SteamVR_Actions.base_movement_GrabPinch,
                    SteamVR_Actions.base_movement_GrabGrip,
                    SteamVR_Actions.base_movement_Pose,
                    SteamVR_Actions.base_movement_SkeletonLeftHand,
                    SteamVR_Actions.base_movement_SkeletonRightHand,
                    SteamVR_Actions.base_movement_Squeeze,
                    SteamVR_Actions.base_movement_HeadsetOnHead,
                    SteamVR_Actions.base_movement_SnapTurnLeft,
                    SteamVR_Actions.base_movement_SnapTurnRight,
                    SteamVR_Actions.base_movement_ThumbXY,
                    SteamVR_Actions.base_movement_changeActionSet,
                    SteamVR_Actions.base_movement_Haptic,
                    SteamVR_Actions.arm_movement_armZRotation,
                    SteamVR_Actions.arm_movement_armUp,
                    SteamVR_Actions.arm_movement_armDown,
                    SteamVR_Actions.arm_movement_changeActionSet,
                    SteamVR_Actions.arm_movement_armXY,
                    SteamVR_Actions.arm_movement_armXYEnable,
                    SteamVR_Actions.arm_movement_pose,
                    SteamVR_Actions.arm_movement_scroll,
                    SteamVR_Actions.common_controls_Pose,
                    SteamVR_Actions.common_controls_ChangeActionSet};
            Valve.VR.SteamVR_Input.actionsIn = new Valve.VR.ISteamVR_Action_In[] {
                    SteamVR_Actions.base_movement_InteractUI,
                    SteamVR_Actions.base_movement_Teleport,
                    SteamVR_Actions.base_movement_GrabPinch,
                    SteamVR_Actions.base_movement_GrabGrip,
                    SteamVR_Actions.base_movement_Pose,
                    SteamVR_Actions.base_movement_SkeletonLeftHand,
                    SteamVR_Actions.base_movement_SkeletonRightHand,
                    SteamVR_Actions.base_movement_Squeeze,
                    SteamVR_Actions.base_movement_HeadsetOnHead,
                    SteamVR_Actions.base_movement_SnapTurnLeft,
                    SteamVR_Actions.base_movement_SnapTurnRight,
                    SteamVR_Actions.base_movement_ThumbXY,
                    SteamVR_Actions.base_movement_changeActionSet,
                    SteamVR_Actions.arm_movement_armZRotation,
                    SteamVR_Actions.arm_movement_armUp,
                    SteamVR_Actions.arm_movement_armDown,
                    SteamVR_Actions.arm_movement_changeActionSet,
                    SteamVR_Actions.arm_movement_armXY,
                    SteamVR_Actions.arm_movement_armXYEnable,
                    SteamVR_Actions.arm_movement_pose,
                    SteamVR_Actions.arm_movement_scroll,
                    SteamVR_Actions.common_controls_Pose,
                    SteamVR_Actions.common_controls_ChangeActionSet};
            Valve.VR.SteamVR_Input.actionsOut = new Valve.VR.ISteamVR_Action_Out[] {
                    SteamVR_Actions.base_movement_Haptic};
            Valve.VR.SteamVR_Input.actionsVibration = new Valve.VR.SteamVR_Action_Vibration[] {
                    SteamVR_Actions.base_movement_Haptic};
            Valve.VR.SteamVR_Input.actionsPose = new Valve.VR.SteamVR_Action_Pose[] {
                    SteamVR_Actions.base_movement_Pose,
                    SteamVR_Actions.arm_movement_pose,
                    SteamVR_Actions.common_controls_Pose};
            Valve.VR.SteamVR_Input.actionsBoolean = new Valve.VR.SteamVR_Action_Boolean[] {
                    SteamVR_Actions.base_movement_InteractUI,
                    SteamVR_Actions.base_movement_Teleport,
                    SteamVR_Actions.base_movement_GrabPinch,
                    SteamVR_Actions.base_movement_GrabGrip,
                    SteamVR_Actions.base_movement_HeadsetOnHead,
                    SteamVR_Actions.base_movement_SnapTurnLeft,
                    SteamVR_Actions.base_movement_SnapTurnRight,
                    SteamVR_Actions.base_movement_changeActionSet,
                    SteamVR_Actions.arm_movement_armUp,
                    SteamVR_Actions.arm_movement_armDown,
                    SteamVR_Actions.arm_movement_changeActionSet,
                    SteamVR_Actions.arm_movement_armXYEnable,
                    SteamVR_Actions.common_controls_ChangeActionSet};
            Valve.VR.SteamVR_Input.actionsSingle = new Valve.VR.SteamVR_Action_Single[] {
                    SteamVR_Actions.base_movement_Squeeze};
            Valve.VR.SteamVR_Input.actionsVector2 = new Valve.VR.SteamVR_Action_Vector2[] {
                    SteamVR_Actions.base_movement_ThumbXY,
                    SteamVR_Actions.arm_movement_armZRotation,
                    SteamVR_Actions.arm_movement_armXY,
                    SteamVR_Actions.arm_movement_scroll};
            Valve.VR.SteamVR_Input.actionsVector3 = new Valve.VR.SteamVR_Action_Vector3[0];
            Valve.VR.SteamVR_Input.actionsSkeleton = new Valve.VR.SteamVR_Action_Skeleton[] {
                    SteamVR_Actions.base_movement_SkeletonLeftHand,
                    SteamVR_Actions.base_movement_SkeletonRightHand};
            Valve.VR.SteamVR_Input.actionsNonPoseNonSkeletonIn = new Valve.VR.ISteamVR_Action_In[] {
                    SteamVR_Actions.base_movement_InteractUI,
                    SteamVR_Actions.base_movement_Teleport,
                    SteamVR_Actions.base_movement_GrabPinch,
                    SteamVR_Actions.base_movement_GrabGrip,
                    SteamVR_Actions.base_movement_Squeeze,
                    SteamVR_Actions.base_movement_HeadsetOnHead,
                    SteamVR_Actions.base_movement_SnapTurnLeft,
                    SteamVR_Actions.base_movement_SnapTurnRight,
                    SteamVR_Actions.base_movement_ThumbXY,
                    SteamVR_Actions.base_movement_changeActionSet,
                    SteamVR_Actions.arm_movement_armZRotation,
                    SteamVR_Actions.arm_movement_armUp,
                    SteamVR_Actions.arm_movement_armDown,
                    SteamVR_Actions.arm_movement_changeActionSet,
                    SteamVR_Actions.arm_movement_armXY,
                    SteamVR_Actions.arm_movement_armXYEnable,
                    SteamVR_Actions.arm_movement_scroll,
                    SteamVR_Actions.common_controls_ChangeActionSet};
        }
        
        private static void PreInitActions()
        {
            SteamVR_Actions.p_base_movement_InteractUI = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/base_movement/in/InteractUI")));
            SteamVR_Actions.p_base_movement_Teleport = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/base_movement/in/Teleport")));
            SteamVR_Actions.p_base_movement_GrabPinch = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/base_movement/in/GrabPinch")));
            SteamVR_Actions.p_base_movement_GrabGrip = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/base_movement/in/GrabGrip")));
            SteamVR_Actions.p_base_movement_Pose = ((SteamVR_Action_Pose)(SteamVR_Action.Create<SteamVR_Action_Pose>("/actions/base_movement/in/Pose")));
            SteamVR_Actions.p_base_movement_SkeletonLeftHand = ((SteamVR_Action_Skeleton)(SteamVR_Action.Create<SteamVR_Action_Skeleton>("/actions/base_movement/in/SkeletonLeftHand")));
            SteamVR_Actions.p_base_movement_SkeletonRightHand = ((SteamVR_Action_Skeleton)(SteamVR_Action.Create<SteamVR_Action_Skeleton>("/actions/base_movement/in/SkeletonRightHand")));
            SteamVR_Actions.p_base_movement_Squeeze = ((SteamVR_Action_Single)(SteamVR_Action.Create<SteamVR_Action_Single>("/actions/base_movement/in/Squeeze")));
            SteamVR_Actions.p_base_movement_HeadsetOnHead = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/base_movement/in/HeadsetOnHead")));
            SteamVR_Actions.p_base_movement_SnapTurnLeft = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/base_movement/in/SnapTurnLeft")));
            SteamVR_Actions.p_base_movement_SnapTurnRight = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/base_movement/in/SnapTurnRight")));
            SteamVR_Actions.p_base_movement_ThumbXY = ((SteamVR_Action_Vector2)(SteamVR_Action.Create<SteamVR_Action_Vector2>("/actions/base_movement/in/ThumbXY")));
            SteamVR_Actions.p_base_movement_changeActionSet = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/base_movement/in/changeActionSet")));
            SteamVR_Actions.p_base_movement_Haptic = ((SteamVR_Action_Vibration)(SteamVR_Action.Create<SteamVR_Action_Vibration>("/actions/base_movement/out/Haptic")));
            SteamVR_Actions.p_arm_movement_armZRotation = ((SteamVR_Action_Vector2)(SteamVR_Action.Create<SteamVR_Action_Vector2>("/actions/arm_movement/in/armZRotation")));
            SteamVR_Actions.p_arm_movement_armUp = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/arm_movement/in/armUp")));
            SteamVR_Actions.p_arm_movement_armDown = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/arm_movement/in/armDown")));
            SteamVR_Actions.p_arm_movement_changeActionSet = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/arm_movement/in/changeActionSet")));
            SteamVR_Actions.p_arm_movement_armXY = ((SteamVR_Action_Vector2)(SteamVR_Action.Create<SteamVR_Action_Vector2>("/actions/arm_movement/in/armXY")));
            SteamVR_Actions.p_arm_movement_armXYEnable = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/arm_movement/in/armXYEnable")));
            SteamVR_Actions.p_arm_movement_pose = ((SteamVR_Action_Pose)(SteamVR_Action.Create<SteamVR_Action_Pose>("/actions/arm_movement/in/pose")));
            SteamVR_Actions.p_arm_movement_scroll = ((SteamVR_Action_Vector2)(SteamVR_Action.Create<SteamVR_Action_Vector2>("/actions/arm_movement/in/scroll")));
            SteamVR_Actions.p_common_controls_Pose = ((SteamVR_Action_Pose)(SteamVR_Action.Create<SteamVR_Action_Pose>("/actions/common_controls/in/Pose")));
            SteamVR_Actions.p_common_controls_ChangeActionSet = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/common_controls/in/ChangeActionSet")));
        }
    }
}
