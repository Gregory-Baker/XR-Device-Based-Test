//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Valve.VR
{
    using System;
    using UnityEngine;
    
    
    public partial class SteamVR_Actions
    {
        
        private static SteamVR_Action_Boolean p_base_movement_Teleport;
        
        private static SteamVR_Action_Boolean p_base_movement_GrabPinch;
        
        private static SteamVR_Action_Boolean p_base_movement_GrabGrip;
        
        private static SteamVR_Action_Pose p_base_movement_Pose;
        
        private static SteamVR_Action_Single p_base_movement_Squeeze;
        
        private static SteamVR_Action_Boolean p_base_movement_HeadsetOnHead;
        
        private static SteamVR_Action_Boolean p_base_movement_SnapTurnLeft;
        
        private static SteamVR_Action_Boolean p_base_movement_SnapTurnRight;
        
        private static SteamVR_Action_Vector2 p_base_movement_ThumbXY;
        
        private static SteamVR_Action_Vector2 p_base_movement_StrafeTarget;
        
        private static SteamVR_Action_Vibration p_base_movement_Haptic;
        
        private static SteamVR_Action_Vector2 p_arm_movement_targetZRotation;
        
        private static SteamVR_Action_Pose p_arm_movement_pose;
        
        private static SteamVR_Action_Boolean p_arm_movement_targetConfirm;
        
        private static SteamVR_Action_Boolean p_arm_movement_increaseTargetDistance;
        
        private static SteamVR_Action_Boolean p_arm_movement_decreaseTargetDistance;
        
        private static SteamVR_Action_Boolean p_arm_movement_changeControlMode;
        
        private static SteamVR_Action_Boolean p_arm_movement_actuateGripper;
        
        private static SteamVR_Action_Boolean p_arm_movement_ActivateMenu;
        
        private static SteamVR_Action_Boolean p_arm_movement_Select;
        
        private static SteamVR_Action_Vector2 p_arm_movement_MenuSelectionPosition;
        
        private static SteamVR_Action_Pose p_common_controls_Pose;
        
        private static SteamVR_Action_Boolean p_common_controls_ChangeActionSet;
        
        private static SteamVR_Action_Boolean p_common_controls_Select;
        
        private static SteamVR_Action_Boolean p_common_controls_Activate;
        
        private static SteamVR_Action_Boolean p_common_controls_Interface;
        
        public static SteamVR_Action_Boolean base_movement_Teleport
        {
            get
            {
                return SteamVR_Actions.p_base_movement_Teleport.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean base_movement_GrabPinch
        {
            get
            {
                return SteamVR_Actions.p_base_movement_GrabPinch.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean base_movement_GrabGrip
        {
            get
            {
                return SteamVR_Actions.p_base_movement_GrabGrip.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Pose base_movement_Pose
        {
            get
            {
                return SteamVR_Actions.p_base_movement_Pose.GetCopy<SteamVR_Action_Pose>();
            }
        }
        
        public static SteamVR_Action_Single base_movement_Squeeze
        {
            get
            {
                return SteamVR_Actions.p_base_movement_Squeeze.GetCopy<SteamVR_Action_Single>();
            }
        }
        
        public static SteamVR_Action_Boolean base_movement_HeadsetOnHead
        {
            get
            {
                return SteamVR_Actions.p_base_movement_HeadsetOnHead.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean base_movement_SnapTurnLeft
        {
            get
            {
                return SteamVR_Actions.p_base_movement_SnapTurnLeft.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean base_movement_SnapTurnRight
        {
            get
            {
                return SteamVR_Actions.p_base_movement_SnapTurnRight.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Vector2 base_movement_ThumbXY
        {
            get
            {
                return SteamVR_Actions.p_base_movement_ThumbXY.GetCopy<SteamVR_Action_Vector2>();
            }
        }
        
        public static SteamVR_Action_Vector2 base_movement_StrafeTarget
        {
            get
            {
                return SteamVR_Actions.p_base_movement_StrafeTarget.GetCopy<SteamVR_Action_Vector2>();
            }
        }
        
        public static SteamVR_Action_Vibration base_movement_Haptic
        {
            get
            {
                return SteamVR_Actions.p_base_movement_Haptic.GetCopy<SteamVR_Action_Vibration>();
            }
        }
        
        public static SteamVR_Action_Vector2 arm_movement_targetZRotation
        {
            get
            {
                return SteamVR_Actions.p_arm_movement_targetZRotation.GetCopy<SteamVR_Action_Vector2>();
            }
        }
        
        public static SteamVR_Action_Pose arm_movement_pose
        {
            get
            {
                return SteamVR_Actions.p_arm_movement_pose.GetCopy<SteamVR_Action_Pose>();
            }
        }
        
        public static SteamVR_Action_Boolean arm_movement_targetConfirm
        {
            get
            {
                return SteamVR_Actions.p_arm_movement_targetConfirm.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean arm_movement_increaseTargetDistance
        {
            get
            {
                return SteamVR_Actions.p_arm_movement_increaseTargetDistance.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean arm_movement_decreaseTargetDistance
        {
            get
            {
                return SteamVR_Actions.p_arm_movement_decreaseTargetDistance.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean arm_movement_changeControlMode
        {
            get
            {
                return SteamVR_Actions.p_arm_movement_changeControlMode.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean arm_movement_actuateGripper
        {
            get
            {
                return SteamVR_Actions.p_arm_movement_actuateGripper.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean arm_movement_ActivateMenu
        {
            get
            {
                return SteamVR_Actions.p_arm_movement_ActivateMenu.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean arm_movement_Select
        {
            get
            {
                return SteamVR_Actions.p_arm_movement_Select.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Vector2 arm_movement_MenuSelectionPosition
        {
            get
            {
                return SteamVR_Actions.p_arm_movement_MenuSelectionPosition.GetCopy<SteamVR_Action_Vector2>();
            }
        }
        
        public static SteamVR_Action_Pose common_controls_Pose
        {
            get
            {
                return SteamVR_Actions.p_common_controls_Pose.GetCopy<SteamVR_Action_Pose>();
            }
        }
        
        public static SteamVR_Action_Boolean common_controls_ChangeActionSet
        {
            get
            {
                return SteamVR_Actions.p_common_controls_ChangeActionSet.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean common_controls_Select
        {
            get
            {
                return SteamVR_Actions.p_common_controls_Select.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean common_controls_Activate
        {
            get
            {
                return SteamVR_Actions.p_common_controls_Activate.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        public static SteamVR_Action_Boolean common_controls_Interface
        {
            get
            {
                return SteamVR_Actions.p_common_controls_Interface.GetCopy<SteamVR_Action_Boolean>();
            }
        }
        
        private static void InitializeActionArrays()
        {
            Valve.VR.SteamVR_Input.actions = new Valve.VR.SteamVR_Action[] {
                    SteamVR_Actions.base_movement_Teleport,
                    SteamVR_Actions.base_movement_GrabPinch,
                    SteamVR_Actions.base_movement_GrabGrip,
                    SteamVR_Actions.base_movement_Pose,
                    SteamVR_Actions.base_movement_Squeeze,
                    SteamVR_Actions.base_movement_HeadsetOnHead,
                    SteamVR_Actions.base_movement_SnapTurnLeft,
                    SteamVR_Actions.base_movement_SnapTurnRight,
                    SteamVR_Actions.base_movement_ThumbXY,
                    SteamVR_Actions.base_movement_StrafeTarget,
                    SteamVR_Actions.base_movement_Haptic,
                    SteamVR_Actions.arm_movement_targetZRotation,
                    SteamVR_Actions.arm_movement_pose,
                    SteamVR_Actions.arm_movement_targetConfirm,
                    SteamVR_Actions.arm_movement_increaseTargetDistance,
                    SteamVR_Actions.arm_movement_decreaseTargetDistance,
                    SteamVR_Actions.arm_movement_changeControlMode,
                    SteamVR_Actions.arm_movement_actuateGripper,
                    SteamVR_Actions.arm_movement_ActivateMenu,
                    SteamVR_Actions.arm_movement_Select,
                    SteamVR_Actions.arm_movement_MenuSelectionPosition,
                    SteamVR_Actions.common_controls_Pose,
                    SteamVR_Actions.common_controls_ChangeActionSet,
                    SteamVR_Actions.common_controls_Select,
                    SteamVR_Actions.common_controls_Activate,
                    SteamVR_Actions.common_controls_Interface};
            Valve.VR.SteamVR_Input.actionsIn = new Valve.VR.ISteamVR_Action_In[] {
                    SteamVR_Actions.base_movement_Teleport,
                    SteamVR_Actions.base_movement_GrabPinch,
                    SteamVR_Actions.base_movement_GrabGrip,
                    SteamVR_Actions.base_movement_Pose,
                    SteamVR_Actions.base_movement_Squeeze,
                    SteamVR_Actions.base_movement_HeadsetOnHead,
                    SteamVR_Actions.base_movement_SnapTurnLeft,
                    SteamVR_Actions.base_movement_SnapTurnRight,
                    SteamVR_Actions.base_movement_ThumbXY,
                    SteamVR_Actions.base_movement_StrafeTarget,
                    SteamVR_Actions.arm_movement_targetZRotation,
                    SteamVR_Actions.arm_movement_pose,
                    SteamVR_Actions.arm_movement_targetConfirm,
                    SteamVR_Actions.arm_movement_increaseTargetDistance,
                    SteamVR_Actions.arm_movement_decreaseTargetDistance,
                    SteamVR_Actions.arm_movement_changeControlMode,
                    SteamVR_Actions.arm_movement_actuateGripper,
                    SteamVR_Actions.arm_movement_ActivateMenu,
                    SteamVR_Actions.arm_movement_Select,
                    SteamVR_Actions.arm_movement_MenuSelectionPosition,
                    SteamVR_Actions.common_controls_Pose,
                    SteamVR_Actions.common_controls_ChangeActionSet,
                    SteamVR_Actions.common_controls_Select,
                    SteamVR_Actions.common_controls_Activate,
                    SteamVR_Actions.common_controls_Interface};
            Valve.VR.SteamVR_Input.actionsOut = new Valve.VR.ISteamVR_Action_Out[] {
                    SteamVR_Actions.base_movement_Haptic};
            Valve.VR.SteamVR_Input.actionsVibration = new Valve.VR.SteamVR_Action_Vibration[] {
                    SteamVR_Actions.base_movement_Haptic};
            Valve.VR.SteamVR_Input.actionsPose = new Valve.VR.SteamVR_Action_Pose[] {
                    SteamVR_Actions.base_movement_Pose,
                    SteamVR_Actions.arm_movement_pose,
                    SteamVR_Actions.common_controls_Pose};
            Valve.VR.SteamVR_Input.actionsBoolean = new Valve.VR.SteamVR_Action_Boolean[] {
                    SteamVR_Actions.base_movement_Teleport,
                    SteamVR_Actions.base_movement_GrabPinch,
                    SteamVR_Actions.base_movement_GrabGrip,
                    SteamVR_Actions.base_movement_HeadsetOnHead,
                    SteamVR_Actions.base_movement_SnapTurnLeft,
                    SteamVR_Actions.base_movement_SnapTurnRight,
                    SteamVR_Actions.arm_movement_targetConfirm,
                    SteamVR_Actions.arm_movement_increaseTargetDistance,
                    SteamVR_Actions.arm_movement_decreaseTargetDistance,
                    SteamVR_Actions.arm_movement_changeControlMode,
                    SteamVR_Actions.arm_movement_actuateGripper,
                    SteamVR_Actions.arm_movement_ActivateMenu,
                    SteamVR_Actions.arm_movement_Select,
                    SteamVR_Actions.common_controls_ChangeActionSet,
                    SteamVR_Actions.common_controls_Select,
                    SteamVR_Actions.common_controls_Activate,
                    SteamVR_Actions.common_controls_Interface};
            Valve.VR.SteamVR_Input.actionsSingle = new Valve.VR.SteamVR_Action_Single[] {
                    SteamVR_Actions.base_movement_Squeeze};
            Valve.VR.SteamVR_Input.actionsVector2 = new Valve.VR.SteamVR_Action_Vector2[] {
                    SteamVR_Actions.base_movement_ThumbXY,
                    SteamVR_Actions.base_movement_StrafeTarget,
                    SteamVR_Actions.arm_movement_targetZRotation,
                    SteamVR_Actions.arm_movement_MenuSelectionPosition};
            Valve.VR.SteamVR_Input.actionsVector3 = new Valve.VR.SteamVR_Action_Vector3[0];
            Valve.VR.SteamVR_Input.actionsSkeleton = new Valve.VR.SteamVR_Action_Skeleton[0];
            Valve.VR.SteamVR_Input.actionsNonPoseNonSkeletonIn = new Valve.VR.ISteamVR_Action_In[] {
                    SteamVR_Actions.base_movement_Teleport,
                    SteamVR_Actions.base_movement_GrabPinch,
                    SteamVR_Actions.base_movement_GrabGrip,
                    SteamVR_Actions.base_movement_Squeeze,
                    SteamVR_Actions.base_movement_HeadsetOnHead,
                    SteamVR_Actions.base_movement_SnapTurnLeft,
                    SteamVR_Actions.base_movement_SnapTurnRight,
                    SteamVR_Actions.base_movement_ThumbXY,
                    SteamVR_Actions.base_movement_StrafeTarget,
                    SteamVR_Actions.arm_movement_targetZRotation,
                    SteamVR_Actions.arm_movement_targetConfirm,
                    SteamVR_Actions.arm_movement_increaseTargetDistance,
                    SteamVR_Actions.arm_movement_decreaseTargetDistance,
                    SteamVR_Actions.arm_movement_changeControlMode,
                    SteamVR_Actions.arm_movement_actuateGripper,
                    SteamVR_Actions.arm_movement_ActivateMenu,
                    SteamVR_Actions.arm_movement_Select,
                    SteamVR_Actions.arm_movement_MenuSelectionPosition,
                    SteamVR_Actions.common_controls_ChangeActionSet,
                    SteamVR_Actions.common_controls_Select,
                    SteamVR_Actions.common_controls_Activate,
                    SteamVR_Actions.common_controls_Interface};
        }
        
        private static void PreInitActions()
        {
            SteamVR_Actions.p_base_movement_Teleport = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/base_movement/in/Teleport")));
            SteamVR_Actions.p_base_movement_GrabPinch = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/base_movement/in/GrabPinch")));
            SteamVR_Actions.p_base_movement_GrabGrip = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/base_movement/in/GrabGrip")));
            SteamVR_Actions.p_base_movement_Pose = ((SteamVR_Action_Pose)(SteamVR_Action.Create<SteamVR_Action_Pose>("/actions/base_movement/in/Pose")));
            SteamVR_Actions.p_base_movement_Squeeze = ((SteamVR_Action_Single)(SteamVR_Action.Create<SteamVR_Action_Single>("/actions/base_movement/in/Squeeze")));
            SteamVR_Actions.p_base_movement_HeadsetOnHead = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/base_movement/in/HeadsetOnHead")));
            SteamVR_Actions.p_base_movement_SnapTurnLeft = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/base_movement/in/SnapTurnLeft")));
            SteamVR_Actions.p_base_movement_SnapTurnRight = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/base_movement/in/SnapTurnRight")));
            SteamVR_Actions.p_base_movement_ThumbXY = ((SteamVR_Action_Vector2)(SteamVR_Action.Create<SteamVR_Action_Vector2>("/actions/base_movement/in/ThumbXY")));
            SteamVR_Actions.p_base_movement_StrafeTarget = ((SteamVR_Action_Vector2)(SteamVR_Action.Create<SteamVR_Action_Vector2>("/actions/base_movement/in/StrafeTarget")));
            SteamVR_Actions.p_base_movement_Haptic = ((SteamVR_Action_Vibration)(SteamVR_Action.Create<SteamVR_Action_Vibration>("/actions/base_movement/out/Haptic")));
            SteamVR_Actions.p_arm_movement_targetZRotation = ((SteamVR_Action_Vector2)(SteamVR_Action.Create<SteamVR_Action_Vector2>("/actions/arm_movement/in/targetZRotation")));
            SteamVR_Actions.p_arm_movement_pose = ((SteamVR_Action_Pose)(SteamVR_Action.Create<SteamVR_Action_Pose>("/actions/arm_movement/in/pose")));
            SteamVR_Actions.p_arm_movement_targetConfirm = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/arm_movement/in/targetConfirm")));
            SteamVR_Actions.p_arm_movement_increaseTargetDistance = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/arm_movement/in/increaseTargetDistance")));
            SteamVR_Actions.p_arm_movement_decreaseTargetDistance = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/arm_movement/in/decreaseTargetDistance")));
            SteamVR_Actions.p_arm_movement_changeControlMode = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/arm_movement/in/changeControlMode")));
            SteamVR_Actions.p_arm_movement_actuateGripper = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/arm_movement/in/actuateGripper")));
            SteamVR_Actions.p_arm_movement_ActivateMenu = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/arm_movement/in/ActivateMenu")));
            SteamVR_Actions.p_arm_movement_Select = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/arm_movement/in/Select")));
            SteamVR_Actions.p_arm_movement_MenuSelectionPosition = ((SteamVR_Action_Vector2)(SteamVR_Action.Create<SteamVR_Action_Vector2>("/actions/arm_movement/in/MenuSelectionPosition")));
            SteamVR_Actions.p_common_controls_Pose = ((SteamVR_Action_Pose)(SteamVR_Action.Create<SteamVR_Action_Pose>("/actions/common_controls/in/Pose")));
            SteamVR_Actions.p_common_controls_ChangeActionSet = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/common_controls/in/ChangeActionSet")));
            SteamVR_Actions.p_common_controls_Select = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/common_controls/in/Select")));
            SteamVR_Actions.p_common_controls_Activate = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/common_controls/in/Activate")));
            SteamVR_Actions.p_common_controls_Interface = ((SteamVR_Action_Boolean)(SteamVR_Action.Create<SteamVR_Action_Boolean>("/actions/common_controls/in/Interface")));
        }
    }
}
