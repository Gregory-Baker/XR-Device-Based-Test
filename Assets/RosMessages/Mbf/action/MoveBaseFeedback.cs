//Do not edit! This file was generated by Unity-ROS MessageGeneration.
using System;
using System.Linq;
using System.Collections.Generic;
using System.Text;
using Unity.Robotics.ROSTCPConnector.MessageGeneration;

namespace RosMessageTypes.Mbf
{
    [Serializable]
    public class MoveBaseFeedback : Message
    {
        public const string k_RosMessageName = "mbf_msgs/MoveBase";
        public override string RosMessageName => k_RosMessageName;

        //  Outcome of most recent controller cycle. Same values as in MoveBase or ExePath result.
        public uint outcome;
        public string message;
        public float dist_to_goal;
        public float angle_to_goal;
        public Geometry.PoseStampedMsg current_pose;
        public Geometry.TwistStampedMsg last_cmd_vel;
        //  last command calculated by the controller

        public MoveBaseFeedback()
        {
            this.outcome = 0;
            this.message = "";
            this.dist_to_goal = 0.0f;
            this.angle_to_goal = 0.0f;
            this.current_pose = new Geometry.PoseStampedMsg();
            this.last_cmd_vel = new Geometry.TwistStampedMsg();
        }

        public MoveBaseFeedback(uint outcome, string message, float dist_to_goal, float angle_to_goal, Geometry.PoseStampedMsg current_pose, Geometry.TwistStampedMsg last_cmd_vel)
        {
            this.outcome = outcome;
            this.message = message;
            this.dist_to_goal = dist_to_goal;
            this.angle_to_goal = angle_to_goal;
            this.current_pose = current_pose;
            this.last_cmd_vel = last_cmd_vel;
        }

        public static MoveBaseFeedback Deserialize(MessageDeserializer deserializer) => new MoveBaseFeedback(deserializer);

        private MoveBaseFeedback(MessageDeserializer deserializer)
        {
            deserializer.Read(out this.outcome);
            deserializer.Read(out this.message);
            deserializer.Read(out this.dist_to_goal);
            deserializer.Read(out this.angle_to_goal);
            this.current_pose = Geometry.PoseStampedMsg.Deserialize(deserializer);
            this.last_cmd_vel = Geometry.TwistStampedMsg.Deserialize(deserializer);
        }

        public override void SerializeTo(MessageSerializer serializer)
        {
            serializer.Write(this.outcome);
            serializer.Write(this.message);
            serializer.Write(this.dist_to_goal);
            serializer.Write(this.angle_to_goal);
            serializer.Write(this.current_pose);
            serializer.Write(this.last_cmd_vel);
        }

        public override string ToString()
        {
            return "MoveBaseFeedback: " +
            "\noutcome: " + outcome.ToString() +
            "\nmessage: " + message.ToString() +
            "\ndist_to_goal: " + dist_to_goal.ToString() +
            "\nangle_to_goal: " + angle_to_goal.ToString() +
            "\ncurrent_pose: " + current_pose.ToString() +
            "\nlast_cmd_vel: " + last_cmd_vel.ToString();
        }

#if UNITY_EDITOR
        [UnityEditor.InitializeOnLoadMethod]
#else
        [UnityEngine.RuntimeInitializeOnLoadMethod]
#endif
        public static void Register()
        {
            MessageRegistry.Register(k_RosMessageName, Deserialize, MessageSubtopic.Feedback);
        }
    }
}
