//Do not edit! This file was generated by Unity-ROS MessageGeneration.
using System;
using System.Linq;
using System.Collections.Generic;
using System.Text;
using Unity.Robotics.ROSTCPConnector.MessageGeneration;

namespace RosMessageTypes.Mbf
{
    [Serializable]
    public class MoveBaseResult : Message
    {
        public const string k_RosMessageName = "mbf_msgs/MoveBase";
        public override string RosMessageName => k_RosMessageName;

        //  Predefined success codes:
        public const byte SUCCESS = 0;
        //  Predefined general error codes:
        public const byte FAILURE = 10;
        public const byte CANCELED = 11;
        public const byte COLLISION = 12;
        public const byte OSCILLATION = 13;
        public const byte START_BLOCKED = 14;
        public const byte GOAL_BLOCKED = 15;
        public const byte TF_ERROR = 16;
        public const byte INTERNAL_ERROR = 17;
        //  21..49 are reserved for future general error codes
        //  Planning/controlling failures:
        public const byte PLAN_FAILURE = 50;
        //  51..99 are reserved as planner specific errors
        public const byte CTRL_FAILURE = 100;
        //  101..149 are reserved as controller specific errors
        public uint outcome;
        public string message;
        //  Configuration upon action completion
        public float dist_to_goal;
        public float angle_to_goal;
        public Geometry.PoseStampedMsg final_pose;

        public MoveBaseResult()
        {
            this.outcome = 0;
            this.message = "";
            this.dist_to_goal = 0.0f;
            this.angle_to_goal = 0.0f;
            this.final_pose = new Geometry.PoseStampedMsg();
        }

        public MoveBaseResult(uint outcome, string message, float dist_to_goal, float angle_to_goal, Geometry.PoseStampedMsg final_pose)
        {
            this.outcome = outcome;
            this.message = message;
            this.dist_to_goal = dist_to_goal;
            this.angle_to_goal = angle_to_goal;
            this.final_pose = final_pose;
        }

        public static MoveBaseResult Deserialize(MessageDeserializer deserializer) => new MoveBaseResult(deserializer);

        private MoveBaseResult(MessageDeserializer deserializer)
        {
            deserializer.Read(out this.outcome);
            deserializer.Read(out this.message);
            deserializer.Read(out this.dist_to_goal);
            deserializer.Read(out this.angle_to_goal);
            this.final_pose = Geometry.PoseStampedMsg.Deserialize(deserializer);
        }

        public override void SerializeTo(MessageSerializer serializer)
        {
            serializer.Write(this.outcome);
            serializer.Write(this.message);
            serializer.Write(this.dist_to_goal);
            serializer.Write(this.angle_to_goal);
            serializer.Write(this.final_pose);
        }

        public override string ToString()
        {
            return "MoveBaseResult: " +
            "\noutcome: " + outcome.ToString() +
            "\nmessage: " + message.ToString() +
            "\ndist_to_goal: " + dist_to_goal.ToString() +
            "\nangle_to_goal: " + angle_to_goal.ToString() +
            "\nfinal_pose: " + final_pose.ToString();
        }

#if UNITY_EDITOR
        [UnityEditor.InitializeOnLoadMethod]
#else
        [UnityEngine.RuntimeInitializeOnLoadMethod]
#endif
        public static void Register()
        {
            MessageRegistry.Register(k_RosMessageName, Deserialize, MessageSubtopic.Result);
        }
    }
}
